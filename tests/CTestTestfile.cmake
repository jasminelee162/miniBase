# CMake generated Testfile for 
# Source directory: E:/Code/Project_grade3/SX/new/miniBase/tests
# Build directory: E:/Code/Project_grade3/SX/new/miniBase/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(storage_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/storage_test.exe")
  set_tests_properties(storage_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;19;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(storage_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/storage_test.exe")
  set_tests_properties(storage_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;19;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(storage_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/storage_test.exe")
  set_tests_properties(storage_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;19;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(storage_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/storage_test.exe")
  set_tests_properties(storage_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;19;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(storage_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(e2e_flow "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/e2e_flow.exe")
  set_tests_properties(e2e_flow PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;46;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(e2e_flow "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/e2e_flow.exe")
  set_tests_properties(e2e_flow PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;46;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(e2e_flow "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/e2e_flow.exe")
  set_tests_properties(e2e_flow PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;46;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(e2e_flow "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/e2e_flow.exe")
  set_tests_properties(e2e_flow PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;46;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(e2e_flow NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(storage_size_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/storage_size_test.exe")
  set_tests_properties(storage_size_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;61;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(storage_size_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/storage_size_test.exe")
  set_tests_properties(storage_size_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;61;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(storage_size_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/storage_size_test.exe")
  set_tests_properties(storage_size_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;61;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(storage_size_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/storage_size_test.exe")
  set_tests_properties(storage_size_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;61;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(storage_size_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(page_linking_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/page_linking_test.exe")
  set_tests_properties(page_linking_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;79;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(page_linking_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/page_linking_test.exe")
  set_tests_properties(page_linking_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;79;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(page_linking_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/page_linking_test.exe")
  set_tests_properties(page_linking_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;79;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(page_linking_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/page_linking_test.exe")
  set_tests_properties(page_linking_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;79;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(page_linking_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(compiler_errors_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/compiler_errors_test.exe")
  set_tests_properties(compiler_errors_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;97;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(compiler_errors_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/compiler_errors_test.exe")
  set_tests_properties(compiler_errors_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;97;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(compiler_errors_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/compiler_errors_test.exe")
  set_tests_properties(compiler_errors_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;97;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(compiler_errors_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/compiler_errors_test.exe")
  set_tests_properties(compiler_errors_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;97;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(compiler_errors_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(bplus_tree_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/bplus_tree_test.exe")
  set_tests_properties(bplus_tree_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;112;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(bplus_tree_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/bplus_tree_test.exe")
  set_tests_properties(bplus_tree_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;112;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(bplus_tree_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/bplus_tree_test.exe")
  set_tests_properties(bplus_tree_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;112;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(bplus_tree_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/bplus_tree_test.exe")
  set_tests_properties(bplus_tree_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;112;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(bplus_tree_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_storage_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/test_storage_enhancements.exe")
  set_tests_properties(test_storage_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;128;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_storage_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/test_storage_enhancements.exe")
  set_tests_properties(test_storage_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;128;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_storage_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/test_storage_enhancements.exe")
  set_tests_properties(test_storage_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;128;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_storage_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/test_storage_enhancements.exe")
  set_tests_properties(test_storage_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;128;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(test_storage_enhancements NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_bplus_tree_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/test_bplus_tree_enhancements.exe")
  set_tests_properties(test_bplus_tree_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;144;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_bplus_tree_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/test_bplus_tree_enhancements.exe")
  set_tests_properties(test_bplus_tree_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;144;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_bplus_tree_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/test_bplus_tree_enhancements.exe")
  set_tests_properties(test_bplus_tree_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;144;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_bplus_tree_enhancements "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/test_bplus_tree_enhancements.exe")
  set_tests_properties(test_bplus_tree_enhancements PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;144;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(test_bplus_tree_enhancements NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(page_types_api_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/page_types_api_test.exe")
  set_tests_properties(page_types_api_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;162;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(page_types_api_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/page_types_api_test.exe")
  set_tests_properties(page_types_api_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;162;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(page_types_api_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/page_types_api_test.exe")
  set_tests_properties(page_types_api_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;162;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(page_types_api_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/page_types_api_test.exe")
  set_tests_properties(page_types_api_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;162;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(page_types_api_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(bplus_tree_split_stress_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/bplus_tree_split_stress_test.exe")
  set_tests_properties(bplus_tree_split_stress_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;180;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(bplus_tree_split_stress_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/bplus_tree_split_stress_test.exe")
  set_tests_properties(bplus_tree_split_stress_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;180;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(bplus_tree_split_stress_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/bplus_tree_split_stress_test.exe")
  set_tests_properties(bplus_tree_split_stress_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;180;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(bplus_tree_split_stress_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/bplus_tree_split_stress_test.exe")
  set_tests_properties(bplus_tree_split_stress_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;180;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(bplus_tree_split_stress_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(storage_end_to_end_demo "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/storage_end_to_end_demo.exe")
  set_tests_properties(storage_end_to_end_demo PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;198;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(storage_end_to_end_demo "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/storage_end_to_end_demo.exe")
  set_tests_properties(storage_end_to_end_demo PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;198;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(storage_end_to_end_demo "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/storage_end_to_end_demo.exe")
  set_tests_properties(storage_end_to_end_demo PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;198;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(storage_end_to_end_demo "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/storage_end_to_end_demo.exe")
  set_tests_properties(storage_end_to_end_demo PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;198;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(storage_end_to_end_demo NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cli_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/cli_test.exe")
  set_tests_properties(cli_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;222;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cli_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/cli_test.exe")
  set_tests_properties(cli_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;222;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cli_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/cli_test.exe")
  set_tests_properties(cli_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;222;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cli_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/cli_test.exe")
  set_tests_properties(cli_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;222;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(cli_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(executor_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Debug/executor_test.exe")
  set_tests_properties(executor_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;240;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(executor_test "E:/Code/Project_grade3/SX/new/miniBase/tests/Release/executor_test.exe")
  set_tests_properties(executor_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;240;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(executor_test "E:/Code/Project_grade3/SX/new/miniBase/tests/MinSizeRel/executor_test.exe")
  set_tests_properties(executor_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;240;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(executor_test "E:/Code/Project_grade3/SX/new/miniBase/tests/RelWithDebInfo/executor_test.exe")
  set_tests_properties(executor_test PROPERTIES  WORKING_DIRECTORY "E:/Code/Project_grade3/SX/new/miniBase" _BACKTRACE_TRIPLES "E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;240;add_test;E:/Code/Project_grade3/SX/new/miniBase/tests/CMakeLists.txt;0;")
else()
  add_test(executor_test NOT_AVAILABLE)
endif()
